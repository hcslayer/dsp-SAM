AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Test run of the SAM platform. At first glance, SAM may be a way to avoid\
  \ the headaches and complexities of API gateway and Lambda integration.  TO TEST\
  \ \n  - CORS enabled API gateway with GET and POST routes. \n  - Dummy lambdas for\
  \ the routes \n  - S3 based storage and CI/CD pipelines \n  - Cloudwatch events\
  \ and internal lambda functions \n"
Parameters:
  Env:
    Description: The SAM application context.
    Type: String
    AllowedValues:
    - TESTING
    - DEV
    - PROD
    Default: TESTING
Globals:
  Function:
    Runtime: python37
    Timeout: 5
    Tracing: PassThrough
    Environment:
      Variables:
        APP_ENV:
          Ref: Env
Resources:
  LambdaTestRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambdaFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      - arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess
      - arn:aws:iam::aws:policy/AmazonSSMFullAccess
      - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
      - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      - arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      - arn:aws:iam::aws:policy/CloudWatchEventsFullAccess
      Policies:
      - PolicyName: apig
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - execute-api:*
            Effect: Allow
            Resource: arn:aws:execute-api:*:*:*
  NotebooksGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/e2012a7d88a3a8f3dca82b197890945b
      Handler: main.handler
      Runtime: python3.7
      Events:
        ApiGet:
          Type: Api
          Properties:
            Path: /notebooks
            Method: get
  NotebooksPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/879f416b547c29e1516ae75b53f109f1
      Handler: main.handler
      Runtime: python3.7
      Events:
        ApiPost:
          Type: Api
          Properties:
            Path: /notebooks
            Method: post
  NotebooksSubIdGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/9cf5b75106b32660e00ba5a2d5223ae1
      Handler: main.handler
      Runtime: python3.7
      Events:
        ApiGetSubresource:
          Type: Api
          Properties:
            Path: /notebooks/{id}
            Method: get
  JobsPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/647d0f1e11f77d1106184dc10ace441e
      Handler: main.handler
      Runtime: python3.7
      Events:
        ApiPostJob:
          Type: Api
          Properties:
            Path: /jobs
            Method: post
  JobsGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/8f698234ca18acc4b88f5cf0e65a111a
      Handler: main.handler
      Runtime: python3.7
      Events:
        ApiGetJob:
          Type: Api
          Properties:
            Path: /jobs
            Method: get
  JobsGetIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/b16441075a7a74adb68b1ba8becdcc66
      Handler: main.handler
      Runtime: python3.7
      Events:
        ApiGetJobId:
          Type: Api
          Properties:
            Path: /jobs/{id}
            Method: get
  SageMakerNotebookLinkInternal:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/7c93f24ea465db22756a3c29309348c0
      Handler: main.handler
      Runtime: python3.7
      Events:
        ClusterEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - aws.emr
              detail-type:
              - EMR Cluster State Change
              detail:
                state:
                - STARTING
  EmrJobMonitorInternal:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/641fa1e520837a6e3e2ab35ebeecb41f
      Handler: main.handler
      Runtime: python3.7
      Events:
        EmrStateEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - aws.emr
              detail-type:
              - EMR Step Status Change
              - EMR Cluster State Change
  SmNotebookMonitorInternal:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      CodeUri: s3://dsp-sam-conv/5659de0f23a9d1742cde1082d3ecc12f
      Handler: main.handler
      Runtime: python3.7
      Events:
        NbStateChange:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - aws.sagemaker
              detail-type:
              - SageMaker Notebook Instance State Change
  SageMakerRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Primary execution role for SageMaker notebooks. Consumes managed
        policies.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - sagemaker.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: SageMaker
  EMRServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Service role for EMR clusters.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: elasticmapreduce.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole
      RoleName: EmrService
  EMRInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Instance role for EMR clusters. Characterizes instance profile.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role
      RoleName: EmrJobFlow
  EMRInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - Ref: EMRInstanceRole
  SagemakerMasterRole:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of the master SageMaker role.
      Name: /setup/roles/SageMakerRole
      Value:
        Fn::GetAtt:
        - SageMakerRole
        - Arn
      Type: String
  ClusterJobFlowRole:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The id of the JobFlowRole for any EMR cluster.
      Name: /setup/roles/ClusterJobFlowRole
      Value:
        Ref: EMRInstanceProfile
      Type: String
  ClusterServiceRole:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The id of the ServiceRole for any EMR cluster.
      Name: /setup/roles/ClusterServiceRole
      Value:
        Ref: EMRServiceRole
      Type: String
  DataLambdaRole:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The master execution role for data lambdas
      Name: /setup/roles/DataLambdasRole
      Value:
        Fn::GetAtt:
        - LambdaTestRole
        - Arn
      Type: String
