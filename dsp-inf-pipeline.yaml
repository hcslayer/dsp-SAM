Description: > 
  Template responsible for creating an infrastructure pipeline between the source 
  repository and an S3 bucket. The contents are to be transmitted, unzipped. 

Parameters: 
  BucketName: 
    Description: The name of the target bucket for GitHub sync. 
    Default: sam-repo-pipeline-test
    Type: String 
  GitHubRepo: 
    Description: The name of the source repository. 
    Default: hcslayer/dsp-SAM
    Type: String
  GitHubBranch: 
    Description: The source repository branch. 
    Default: master
    Type: String
    AllowedValues: 
      - dev
      - stage
      - prod
      - master
  GitHubOAuth: 
    Description: The personal authentication token for GitHub to communicate with AWS. 
    NoEcho: true
    Type: String 

Resources: 
  Bucket: 
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref BucketName
  
  ArtifactBucket: 
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Join [ '', [ !Ref BucketName, pipeline-artifacts ] ]
  
  PipelineRole: 
    Type: AWS::IAM::Role
    Properties: 
      Description: Codepipeline role to update AWS resources. 
      AssumeRolePolicyDocument: 
        Statement: 
          - 
            Effect: 'Allow'
            Principal: 
              Service: 
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
      # Policies: for granular control, as needed 
      RoleName: Git-2-S3-Pipeline-Role
  
  BucketPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - Bucket
      - ArtifactBucket
      - PipelineRole
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      # - !Join ["",["arn:aws:iam::", !Ref "AWS::AccountId", ":role/CodePipelineServiceRole"]]
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: AppSource
              RunOrder: 1
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Branch: !Ref 'GitHubBranch'
                OAuthToken: !Sub GithubOAuth
                Owner: !Select [0, !Split ["/", !Ref 'GitHubRepo']]
                Repo: !Select [1, !Split ["/", !Ref 'GitHubRepo']]
              OutputArtifacts:
                - Name: 'Source'
        - Name: Deploy
          Actions:
            - Name: Deploy
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref Bucket
                Extract: 'true'
              InputArtifacts:
                - Name: 'Source'
      RestartExecutionOnUpdate: true